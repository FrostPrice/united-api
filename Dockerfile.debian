# Compiler/Builder (Only used to compile the application)
FROM rust as builder

RUN mkdir -p /rust-actix-web-template

WORKDIR /rust-actix-web-template

ENV APP_USER=non-root

COPY Cargo.toml Cargo.toml
COPY diesel.toml diesel.toml
COPY src src
COPY migrations migrations

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o rst.sh && chmod +x rst.sh && ./rst.sh -y

RUN apt update && apt install -y gcc libpq-dev libsqlite3-dev

RUN rustc --version && \
    cargo --version && \
    cargo update && \
    cargo build --release

# Container Runtime (Used to run the application)
FROM debian

ARG APP=/usr/src/rust-actix-web-template
ENV APP_USER=root

RUN apt update -y && apt upgrade -y && apt install -y libpq-dev libsqlite3-dev \ 
    && apt-get clean && mkdir -p ${APP} 

COPY --from=builder /rust-actix-web-template/target/release/rust-actix-web-template ${APP}/rust-actix-web-template
COPY --from=builder /etc/localtime /etc/localtime

RUN true

COPY entrypoint.sh ${APP}/entrypoint.sh

RUN chown -R $APP_USER:$APP_USER ${APP} && chmod +x ${APP}/entrypoint.sh

USER $APP_USER

WORKDIR ${APP}

CMD ["./entrypoint.sh"]

